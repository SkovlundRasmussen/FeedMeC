@model FeedMe.ViewModels.UserCreateViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4>User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.user.user_id)

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.user.firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.user.firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.user.firstname, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.user.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.user.lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.user.lastname, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.user.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.user.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.user.email, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.customerInfo.city, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customerInfo.city, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customerInfo.city, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.customerInfo.postal_code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customerInfo.postal_code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customerInfo.postal_code, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.customerInfo.street_name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customerInfo.street_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customerInfo.street_name, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.customerInfo.street_number, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customerInfo.street_number, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customerInfo.street_number, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>

}


<div>
    <a asp-action="Index">Back to List</a>
</div>

